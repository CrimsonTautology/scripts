#!/usr/bin/env ruby

require 'vdf4r'

SPACE = 8

servers = [
  {name: 'fof_foz', mod: 'fof'},
  {name: 'fof_gg', mod: 'fof'},
  {name: 'fof_gg2', mod: 'fof'},
  {name: 'fof_main', mod: 'fof'},
  {name: 'fof_mk', mod: 'fof'},
]

def path_to_dmr server
  server[:dmr] ||= 'dmr.txt'
  "#{ENV['HOME']}/steamcmd/#{server[:name]}/#{server[:mod]}/custom/server_settings/#{server[:dmr]}"
end


servers.each do |server|
  empties = []
  mids = []
  highs = []

  File.open(path_to_dmr(server)) do |file|
    parser = VDF4R::Parser.new(file)
    dmr = parser.parse

    rotation = dmr["rotation"]

    rotation.each do |node, v|
      group = v["map"]
      group = v["group"] if !group || group.empty?

      if v["title"] && !v["title"].empty?
        group = v["title"].downcase.gsub(/\W/,'')
      end

      if node =~ /\Aempty/
        begin 
          index = node.gsub(/[^0-9]/, '').to_i
          empties[index] = group
        rescue
        end
      end

      if node =~ /\Amid/
        begin 
          index = node.gsub(/[^0-9]/, '').to_i
          mids[index] = group
        rescue
        end
      end

      if node =~ /\Ahigh/
        begin 
          index = node.gsub(/[^0-9]/, '').to_i
          highs[index] = group
        rescue
        end
      end

    end
  end

  empties_list = empties.compact.map do |s|
    s[0..SPACE-1].rjust(SPACE)
  end.join("  ")

  #Mid
  mids_list = mids.compact.map do |s|
    s[0..SPACE-1].rjust(SPACE)
  end.join("  ")

  #High
  highs_list = highs.compact.map do |s|
    s[0..SPACE-1].rjust(SPACE)
  end.join("  ")

  largest_index = [
    empties.compact.length,
    mids.compact.length,
    highs.compact.length,
  ].max

  index_list = (1..largest_index).map do |s|
    "#{s}".rjust(SPACE)
  end.join("  ")


  puts "#{server[:name].ljust(SPACE+2)}#{index_list}"
  puts "#{'Empty:'.ljust(SPACE+2)}#{empties_list}"
  puts "#{'Mid:'.ljust(SPACE+2)}#{mids_list}"
  puts "#{'High:'.ljust(SPACE+2)}#{highs_list}"
  puts "\n\n"

end
